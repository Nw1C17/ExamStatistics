# Generated by Django 3.2.8 on 2022-01-09 07:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код района')),
                ('name', models.CharField(max_length=255, verbose_name='Название района')),
            ],
            options={
                'verbose_name_plural': 'Районы',
            },
        ),
        migrations.CreateModel(
            name='ElementsSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element_codeES', models.CharField(max_length=10, verbose_name='Код элемента')),
                ('checkedRS', models.CharField(max_length=255, verbose_name='Проверяемые требования')),
            ],
            options={
                'verbose_name_plural': 'Кодификатор элементов',
            },
        ),
        migrations.CreateModel(
            name='Examination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(verbose_name='Год')),
                ('min_score', models.IntegerField(verbose_name='Минимальный балл для зачета')),
                ('grading_system', models.BooleanField(verbose_name='5 бальная система оценивания')),
            ],
            options={
                'verbose_name_plural': 'Экзамены',
            },
        ),
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название экзамена')),
            ],
            options={
                'verbose_name_plural': 'Тип экзамена',
            },
        ),
        migrations.CreateModel(
            name='LocalityType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название типа')),
            ],
            options={
                'verbose_name_plural': 'Тип населенного пункта',
            },
        ),
        migrations.CreateModel(
            name='ParticipantCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название категории')),
            ],
            options={
                'verbose_name_plural': 'Категория участника',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название формы')),
            ],
            options={
                'verbose_name_plural': 'Организационная форма',
            },
        ),
        migrations.CreateModel(
            name='RequirementsSpec',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_codeRS', models.CharField(max_length=10, verbose_name='Код умения')),
                ('checkedRS', models.CharField(max_length=255, verbose_name='Проверяемые требования')),
                ('exam', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.examination')),
                ('section_codeRS', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.requirementsspec')),
            ],
            options={
                'verbose_name_plural': 'Кодификатор требований',
            },
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variant', models.IntegerField(verbose_name='Вариант')),
                ('primary_score', models.IntegerField(verbose_name='Первичный балл')),
                ('completion_perc', models.IntegerField(verbose_name='Процент выполнения')),
                ('shortanswer', models.CharField(max_length=50, verbose_name='Краткий ответ')),
                ('full_answer', models.CharField(max_length=50, verbose_name='Полный ответ ответ')),
                ('point_scale100', models.IntegerField(verbose_name='100 балльная шкала')),
                ('point_scale5', models.IntegerField(verbose_name='5 балльная шкала')),
                ('short_answerPS', models.IntegerField(verbose_name='Первичный балл за часть с кратким ответом')),
                ('full_answerPS', models.IntegerField(verbose_name='Первичный балл за часть с полным ответом')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.participantcategory')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.examination')),
            ],
            options={
                'verbose_name_plural': 'Результаты',
            },
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('school_code', models.IntegerField(primary_key=True, serialize=False, verbose_name='Код школы')),
                ('full_name', models.CharField(max_length=255, verbose_name='Полное название школы')),
                ('short_name', models.CharField(max_length=255, verbose_name='Краткое название школы')),
                ('adres', models.CharField(max_length=255, verbose_name='Адрес')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.district')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.property')),
            ],
            options={
                'verbose_name': 'Школы',
                'verbose_name_plural': 'Школы',
            },
        ),
        migrations.CreateModel(
            name='SchoolType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название типа')),
            ],
            options={
                'verbose_name_plural': 'Тип школы',
            },
        ),
        migrations.CreateModel(
            name='Specification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('checked', models.CharField(max_length=255, verbose_name='Проверяемые требования')),
                ('difficulty', models.CharField(max_length=5, verbose_name='Уровень сложности')),
                ('max_score', models.IntegerField(verbose_name='Максимальный балл')),
                ('estimated_time', models.IntegerField(verbose_name='Примерное время выполнения')),
                ('task_number', models.IntegerField(verbose_name='Номер задания')),
                ('examination', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.examination')),
                ('section_code', models.ManyToManyField(to='main.ElementsSpec')),
                ('skills', models.ManyToManyField(to='main.RequirementsSpec')),
            ],
            options={
                'verbose_name_plural': 'Спецификации',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название предмета')),
            ],
            options={
                'verbose_name_plural': 'Предметы',
            },
        ),
        migrations.CreateModel(
            name='UserTemplates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название шаблона')),
                ('jsonFile', models.JSONField(default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Шаблоны пользователей',
            },
        ),
        migrations.CreateModel(
            name='UserEducationalInstitution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.BooleanField(default=True, verbose_name='Все учреждения')),
                ('school', models.ForeignKey(blank=True, default=None, max_length=255, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Школы привязанные к пользователю',
            },
        ),
        migrations.CreateModel(
            name='UserDistrict',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.BooleanField(default=True, verbose_name='Все районы')),
                ('district', models.ForeignKey(blank=True, default=None, max_length=255, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.district')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Районы привязанные к пользователю',
            },
        ),
        migrations.CreateModel(
            name='StudentAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer', models.IntegerField(verbose_name='Ответ')),
                ('result', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.result')),
                ('task_number', models.ManyToManyField(to='main.Specification')),
            ],
            options={
                'verbose_name_plural': 'Ответы ученика',
            },
        ),
        migrations.CreateModel(
            name='SchoolKind',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.IntegerField(verbose_name='Код школы')),
                ('name', models.CharField(max_length=255, verbose_name='Название вида')),
                ('school_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.schooltype')),
            ],
            options={
                'verbose_name_plural': 'Вид школы',
            },
        ),
        migrations.AddField(
            model_name='school',
            name='school_kind',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.schoolkind'),
        ),
        migrations.AddField(
            model_name='school',
            name='town_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.localitytype'),
        ),
        migrations.AddField(
            model_name='result',
            name='school_code',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.school'),
        ),
        migrations.AddField(
            model_name='examination',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.examtype'),
        ),
        migrations.AddField(
            model_name='examination',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.subject'),
        ),
        migrations.AddField(
            model_name='elementsspec',
            name='exam',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.examination'),
        ),
        migrations.AddField(
            model_name='elementsspec',
            name='section_codeRS',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.elementsspec'),
        ),
    ]
